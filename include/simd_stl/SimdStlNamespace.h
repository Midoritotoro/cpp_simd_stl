#pragma once 


#ifndef __SIMD_STL_NAMESPACE_BEGIN
#define __SIMD_STL_NAMESPACE_BEGIN namespace simd_stl {
#endif // __SIMD_STL_NAMESPACE_BEGIN

#ifndef __SIMD_STL_NAMESPACE_END
#define __SIMD_STL_NAMESPACE_END }
#endif // __SIMD_STL_NAMESPACE_END



#ifndef __SIMD_STL_ARCH_NAMESPACE_BEGIN
#define __SIMD_STL_ARCH_NAMESPACE_BEGIN namespace simd_stl { namespace arch {
#endif // __SIMD_STL_ARCH_NAMESPACE_BEGIN

#ifndef __SIMD_STL_ARCH_NAMESPACE_END
#define __SIMD_STL_ARCH_NAMESPACE_END }}
#endif // __SIMD_STL_ARCH_NAMESPACE_END



#ifndef __SIMD_STL_ALGORITHM_NAMESPACE_BEGIN 
#define __SIMD_STL_ALGORITHM_NAMESPACE_BEGIN namespace simd_stl { namespace algorithm {
#endif // __SIMD_STL_ALGORITHM_NAMESPACE_BEGIN

#ifndef __SIMD_STL_ALGORITHM_NAMESPACE_END
#define __SIMD_STL_ALGORITHM_NAMESPACE_END }}
#endif // __SIMD_STL_ALGORITHM_NAMESPACE_END



#ifndef __SIMD_STL_TYPE_TRAITS_NAMESPACE_BEGIN 
#define __SIMD_STL_TYPE_TRAITS_NAMESPACE_BEGIN namespace simd_stl { namespace type_traits {
#endif // __SIMD_STL_TYPE_TRAITS_NAMESPACE_BEGIN

#ifndef __SIMD_STL_TYPE_TRAITS_NAMESPACE_END
#define __SIMD_STL_TYPE_TRAITS_NAMESPACE_END }}
#endif // __SIMD_STL_TYPE_TRAITS_NAMESPACE_END



#ifndef __SIMD_STL_MATH_NAMESPACE_BEGIN 
#define __SIMD_STL_MATH_NAMESPACE_BEGIN namespace simd_stl { namespace math {
#endif // __SIMD_STL_MATH_NAMESPACE_BEGIN

#ifndef __SIMD_STL_MATH_NAMESPACE_END
#define __SIMD_STL_MATH_NAMESPACE_END }}
#endif // __SIMD_STL_MATH_NAMESPACE_END